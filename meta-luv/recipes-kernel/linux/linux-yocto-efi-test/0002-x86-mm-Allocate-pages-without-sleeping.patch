From 0474a2d00908c284e6a7f44183c1e301f6c78ef3 Mon Sep 17 00:00:00 2001
From: Sai Praneeth <sai.praneeth.prakhya@intel.com>
Date: Thu, 9 Mar 2017 15:31:23 -0800
Subject: [PATCH 2/9] x86/mm: Allocate pages without sleeping

When CONFIG_EFI_WARN_ON_ILLEGAL_ACCESSES is enabled, and if some
firmware does illegal accesses, kernel will be in interrupt context when
it's trying to fixup this page fault. Hence, allocate pages without
sleeping in interrupt context.

This change shouldn't affect any other page allocations because this
allocation is used only by efi functions and not any other.

Signed-off-by: Sai Praneeth Prakhya <sai.praneeth.prakhya@intel.com>
Cc: Lee, Chun-Yi <jlee@suse.com>
Cc: Borislav Petkov <bp@alien8.de>
Cc: Fenghua Yu <fenghua.yu@intel.com>
Cc: Ravi Shankar <ravi.v.shankar@intel.com>
Cc: Matt Fleming <matt@codeblueprint.co.uk>
Cc: Ard Biesheuvel <ard.biesheuvel@linaro.org>
CC: Ricardo Neri <ricardo.neri-calderon@linux.intel.com>
---
 arch/x86/mm/pageattr.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/arch/x86/mm/pageattr.c b/arch/x86/mm/pageattr.c
index 5a287e523eab..1507e2590a57 100644
--- a/arch/x86/mm/pageattr.c
+++ b/arch/x86/mm/pageattr.c
@@ -868,7 +868,7 @@ static void unmap_pud_range(pgd_t *pgd, unsigned long start, unsigned long end)
 
 static int alloc_pte_page(pmd_t *pmd)
 {
-	pte_t *pte = (pte_t *)get_zeroed_page(GFP_KERNEL | __GFP_NOTRACK);
+	pte_t *pte = (pte_t *)get_zeroed_page(GFP_ATOMIC | __GFP_NOTRACK);
 	if (!pte)
 		return -1;
 
-- 
2.1.4

